#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by git-commit with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

# test "" = "$(grep '^Signed-off-by: ' "$1" |
# 	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
# 	echo >&2 Duplicate Signed-off-by lines.
# 	exit 1
# }

msg=$(sed "/^#/d" "$1")

test $(echo "$msg" | wc -L | cut -d " " -f 1) -lt 69 ||
 {
    echo "Line length of commit message exceeded 68 characters!"
    exit 1
 }

if [ "$(echo "$msg" | wc -l | cut -d " " -f 1)" -ge "2" ]; then
  test "$(echo "$msg" | sed -n "2p")" = "" ||
   {
     echo "Line number 2 not empty!"
     exit 1
   }
fi
